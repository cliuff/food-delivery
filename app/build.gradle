apply plugin: 'com.android.application'

// below: load the desired values from app.properties in order to be injected into BuildConfig and Res
// the values in local.properties must not contain quotes otherwise the parsed values here will contain quotes
Properties properties = new Properties()
properties.load(project.rootProject.file("app.properties").newDataInputStream())
def buildPackage = properties.getProperty("packageName", "")
def buildApplicationId = buildPackage

android {
    buildToolsVersion "29.0.2"
    compileSdkVersion 29
    defaultConfig {
        // below: manifest placeholders
        manifestPlaceholders = [buildPackage: buildPackage]
        applicationId buildApplicationId
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 20010214
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testApplicationId "${applicationId}.test"
        // below: inject the desired values into BuildConfig and Res
        // the string values have to be wrapped in quotes because the value in local.properties does not have quotes
        buildConfigField "String", "BUILD_PACKAGE", "\"$buildPackage\""
        resValue "string", "buildPackage", buildPackage
    }
    flavorDimensions "arch"
    productFlavors {
        full {
            dimension "arch"
        }
//        arm {
//            dimension "arch"
//            ndk {
//                abiFilters "armeabi-v7a", "arm64-v8a"
//            }
//        }
//        x86 {
//            dimension "arch"
//            ndk {
//                abiFilters "x86", "x86_64"
//            }
//        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.mortal'
            debuggable true
            jniDebuggable false
            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false
        }
        release {
            debuggable false
            jniDebuggable false
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    def lifecycle_version = "2.2.0-rc03"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'com.google.android.material:material:1.1.0-rc01'
}
